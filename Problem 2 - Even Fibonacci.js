/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed n, 
find the sum of the even-valued terms.
*/

function fiboEvenSum(n){

    let num1 = 0
    let num2 = 1
    let fib = 0
    let sum = 0

    for(let i=0;fib<=n;i++){

      fib = num1 + num2
      num1 = num2
      num2 = fib
      if(fib%2==0){
        sum+=fib
      }
    }
    return sum;
}

console.log(fiboEvenSum(10))
console.log(fiboEvenSum(34))
console.log(fiboEvenSum(60))
console.log(fiboEvenSum(1000))
console.log(fiboEvenSum(100000))
console.log(fiboEvenSum(4000000))

/*
The function should return an even value.
The function should sum the even-valued Fibonacci numbers: 
fiboEvenSum(8) should return 10.
fiboEvenSum(10) should return 10.
fiboEvenSum(34) should return 44.
fiboEvenSum(60) should return 44.
fiboEvenSum(1000) should return 798.
fiboEvenSum(100000) should return 60696.
fiboEvenSum(4000000) should return 4613732.
*/